SCRIPT_VERSION="2025.03.14-00-00"

SUPPORTED_LANGUAGES="US JP"

# メッセージデータベース (多言語対応)
# フォーマット: 言語コード|メッセージキー=メッセージ

# =======================
# デバッグテスト
# =======================
US|MSG_UNDER_TEST=👽 Under test
JP|MSG_UNDER_TEST=👹 試験中

# =======================
# aios help messages
# =======================
# print_help() 関数
US|MSG_HELP_USAGE=Usage: aios [OPTIONS] [LANGUAGE]

JP|MSG_HELP_USAGE=使用方法: aios [オプション] [言語]

US|MSG_HELP_OPTIONS_HEADER=Options:
JP|MSG_HELP_OPTIONS_HEADER=オプション:

US|MSG_HELP_HELP=Show this help message
JP|MSG_HELP_HELP=このヘルプメッセージを表示

US|MSG_HELP_VERSION=Show script version
JP|MSG_HELP_VERSION=スクリプトのバージョンを表示

US|MSG_HELP_RESET=Reset all cached data
JP|MSG_HELP_RESET=キャッシュデータをすべてリセット

US|MSG_HELP_DEBUG=Enable debug mode
JP|MSG_HELP_DEBUG=デバッグモードを有効化

US|MSG_HELP_UPDATE=Update aios script
JP|MSG_HELP_UPDATE=aiosスクリプトを更新

US|MSG_HELP_FORCE=Force operations without confirmation
JP|MSG_HELP_FORCE=確認なしで操作を強制実行

US|MSG_HELP_TOKEN=Setup GitHub API token
JP|MSG_HELP_TOKEN=GitHub APIトークンを設定

US|MSG_HELP_FULL=Run in full mode
JP|MSG_HELP_FULL=フルモードで実行

US|MSG_HELP_LIGHT=Run in light mode
JP|MSG_HELP_LIGHT=軽量モードで実行

US|MSG_HELP_COMMON_DEBUG=Run in debug mode
JP|MSG_HELP_COMMON_DEBUG=デバッグモードで実行

US|MSG_HELP_DRY_RUN=Show what would be done without actual execution
JP|MSG_HELP_DRY_RUN=実際の実行なしで何が行われるかを表示

US|MSG_HELP_LANGUAGE_HEADER=Language:
JP|MSG_HELP_LANGUAGE_HEADER=言語:

US|MSG_HELP_LANGUAGE=Set user interface language
JP|MSG_HELP_LANGUAGE=ユーザーインターフェース言語を設定

US|MSG_HELP_EXAMPLES_HEADER=Examples:
JP|MSG_HELP_EXAMPLES_HEADER=使用例:

US|MSG_HELP_EXAMPLE1=sh aios full ja       # Run in full mode with Japanese language
JP|MSG_HELP_EXAMPLE1=sh aios full ja       # 日本語でフルモードを実行

US|MSG_HELP_EXAMPLE2=sh aios -u            # Update the script to latest version
JP|MSG_HELP_EXAMPLE2=sh aios -u            # スクリプトを最新バージョンに更新

US|MSG_HELP_EXAMPLE3=sh aios -r            # Reset all cached data
JP|MSG_HELP_EXAMPLE3=sh aios -r            # すべてのキャッシュデータをリセット

US|MSG_HELP_EXAMPLE4=sh aios -d -cf        # Run in full mode with debug output
JP|MSG_HELP_EXAMPLE4=sh aios -d -cf        # デバッグ出力付きでフルモードを実行

US|MSG_HELP_DEBUG_HEADER=Debug levels:
JP|MSG_HELP_DEBUG_HEADER=デバッグレベル:

US|MSG_HELP_DEBUG_STANDARD=-d, --debug           # Standard debug info
JP|MSG_HELP_DEBUG_STANDARD=-d, --debug           # 標準デバッグ情報

US|MSG_HELP_DEBUG_VERBOSE=-d2, --debug2         # Verbose debug info
JP|MSG_HELP_DEBUG_VERBOSE=-d2, --debug2         # 詳細なデバッグ情報

# handle_error() 関数
# 動的にエラーメッセージキーを受け取るため、様々なエラーメッセージキーを使用する可能性がある
# 具体的なキーは呼び出し元によって異なる

# print_banner() 関数
JP|MSG_BANNER_DECCRIPTION=オープンダブルアールティー専用設定ソフトウェア
US|MSG_BANNER_DECCRIPTION=Dedicated configuration software for OpenWRT

JP|MSG_BANNER_NAME=オールインワンスクリプト
US|MSG_BANNER_NAME=All-in-One Scripts

JP|MSG_BANNER_DISCLAIMER=免責事項: 本スクリプトは自己責任でご使用下さい
US|MSG_BANNER_DISCLAIMER=Disclaimer: Use this script at your own risk

# confirm() 関数
# 主に動的に指定されたメッセージキーを使用するが、特定のエラー用に以下のキーを使用
JP|MSG_INVALID_INPUT_YN=無効な入力です。Y または N を入力してください。
US|MSG_INVALID_INPUT_YN=Invalid input. Please enter Y or N.

# check_common() 関数のreset/returnモード
US|MSG_RESET_COMPLETE=Reset completed. All cached data has been cleared.
JP|MSG_RESET_COMPLETE=リセットが完了しました。すべてのキャッシュデータがクリアされました。

# download() 関数
# 主に以下のようなキーを動的に構築したメッセージを使用
US|MSG_DOWNLOAD_FAILED=Download failed: {file}
JP|MSG_DOWNLOAD_FAILED=ダウンロード失敗：{file}

US|MSG_DOWNLOAD_SUCCESS=Download successful: {file}
JP|MSG_DOWNLOAD_SUCCESS=ダウンロード成功：{file}

# エラー処理全般で使用される可能性があるメッセージ
US|MSG_ERROR_OCCURRED=An error occurred.
JP|MSG_ERROR_OCCURRED=エラーが発生しました。

# デバッグ・ログ関連のメッセージ（debug_log関数で使用）
# 動的に生成されるメッセージを使用するため、特定のキーはない

# =======================
# common-country.sh
# =======================

# normalize_input() 関数
# この関数自体はメッセージキーを使用していません

# select_country() 関数
US|MSG_ENTER_COUNTRY=🌎 Enter country name, code, or language to search.
JP|MSG_ENTER_COUNTRY=🌏 国名、コード、または言語を入力してください。

US|MSG_SEARCH_KEYWORD=🔍 Search (Keyword/Code):
JP|MSG_SEARCH_KEYWORD=🔍 検索（キーワード/コード）:

US|MSG_COUNTRY_NOT_FOUND=❌ No matching country found for '{0}'. Please try again.
JP|MSG_COUNTRY_NOT_FOUND=❌ '{0}'に一致する国が見つかりません。再度入力してください。

US|MSG_SINGLE_MATCH_FOUND=Found single match: {0}
JP|MSG_SINGLE_MATCH_FOUND=一致する国が見つかりました: {0}

US|MSG_COUNTRY_SUCCESS=✅ Country and language selection completed successfully!
JP|MSG_COUNTRY_SUCCESS=✅ 国と言語の選択が完了しました！

# detect_and_set_location() 関数
US|MSG_USE_DETECTED_SETTINGS=Do you want to use these settings?
JP|MSG_USE_DETECTED_SETTINGS=この設定を使用しますか？

US|MSG_DETECTED_COUNTRY=Detected country:
JP|MSG_DETECTED_COUNTRY=検出された国:

US|MSG_DETECTED_ZONE=Detected zone:
JP|MSG_DETECTED_ZONE=検出されたゾーン:

US|MSG_CONFIRM_ONLY_YN=🔄 Confirm (y/n):
JP|MSG_CONFIRM_ONLY_YN=🔄 確認 (y/n):

US|MSG_TIMEZONE_SUCCESS=✅ Zone selection completed successfully!
JP|MSG_TIMEZONE_SUCCESS=✅ ゾーンの選択が完了しました！

# select_list() 関数
US|MSG_INVALID_COUNTRY_NUMBER=❌ Invalid country number. Please try again.
JP|MSG_INVALID_COUNTRY_NUMBER=❌ 無効な国番号です。もう一度お試しください。

US|MSG_INVALID_ZONE_NUMBER=❌ Invalid zone number. Please try again.
JP|MSG_INVALID_ZONE_NUMBER=❌ 無効なゾーン番号です。もう一度お試しください。

US|MSG_SELECT_COUNTRY_NUMBER=📌 Please select country (Number):
JP|MSG_SELECT_COUNTRY_NUMBER=📌 国を選択してください(番号):

US|MSG_SELECT_ZONE_NUMBER=📌 Please select zone (number):
JP|MSG_SELECT_ZONE_NUMBER=📌 ゾーンを選択してください(番号):

US|MSG_SELECT_NUMBER=📌 Select Number:
JP|MSG_SELECT_NUMBER=📌 番号を選択:

US|MSG_NUMBER_OUT_OF_RANGE=Number out of range. Please select a valid option.
JP|MSG_NUMBER_OUT_OF_RANGE=入力した数字は範囲外です。有効な番号を選んでください。

US|MSG_SELECTED_COUNTRY=You selected: {0}
JP|MSG_SELECTED_COUNTRY=選択された国: {0}

US|MSG_SELECTED_ZONE=You have selected timezone: {0}
JP|MSG_SELECTED_ZONE=選択したタイムゾーン: {0}

# select_zone() 関数
US|MSG_SELECT_TIMEZONE=Please select your timezone from the list:
JP|MSG_SELECT_TIMEZONE=リストからタイムゾーンを選択してください：

# country_write() 関数
US|ERR_FILE_NOT_FOUND=❌ Error: File not found: {file}
JP|ERR_FILE_NOT_FOUND=❌ エラー：ファイルが見つかりません：{file}

# normalize_language() 関数
US|MSG_LANGUAGE_SET=✅ Script language settings completed successfully!
JP|MSG_LANGUAGE_SET=✅ スクリプト用の言語の設定が完了しました！

# zone_write() 関数
US|MSG_ERROR_OCCURRED=⚠️ An error occurred.
JP|MSG_ERROR_OCCURRED=⚠️ エラーが発生しました。

# =======================
# common-package.sh
# =======================

# start_spinner() 関数
# この関数はメッセージDBからのキーを使用していません
# スピナーアニメーション表示にはcolor関数を使用

# stop_spinner() 関数
# この関数はメッセージDBからのキーを使用していません
# パラメーターとして渡されたメッセージをcolor関数で装飾

# check_install_list() 関数
# この関数はメッセージDBからのキーを使用していません

# update_package_list() 関数
US|MSG_RUNNING_UPDATE=Updating package list...
JP|MSG_RUNNING_UPDATE=パッケージリストを更新中...

US|MSG_UPDATE_FAILED=❌ Update failed. Check the logs for details.
JP|MSG_UPDATE_FAILED=❌ アップデートに失敗しました。詳細はログを確認してください。

US|MSG_UPDATE_SUCCESS=✅ Package list has been updated to the latest version.
JP|MSG_UPDATE_SUCCESS=✅ パッケージリストは最新に更新しました。

US|MSG_ERROR_UPDATE_FAILED=❌ Failed to update package list.
JP|MSG_ERROR_UPDATE_FAILED=❌ パッケージリストの更新に失敗しました。

US|MSG_ERROR_WRITE_CACHE=❌ Error: Failed to write to cache file.
JP|MSG_ERROR_WRITE_CACHE=❌ エラー：キャッシュファイルへの書き込みに失敗しました。

# local_package_db() 関数
# この関数はメッセージDBからのキーを使用していません
# デバッグログのみ出力

# package_pre_install() 関数
# この関数はメッセージDBからのキーを使用していません
# デバッグログのみ出力

# install_normal_package() 関数
US|MSG_INSTALLING_PACKAGE=📦 Installing package 
JP|MSG_INSTALLING_PACKAGE=📦  をインストール中...

US|MSG_INSTALL_SUCCESS=Installation completed successfully.
JP|MSG_INSTALL_SUCCESS= のインストールは完了しました。

# install_package() 関数
US|MSG_UNKNOWN_OPTION=⚠️ Unknown option: {option}
JP|MSG_UNKNOWN_OPTION=⚠️ 不明なオプション: {option}

US|MSG_ERROR_NO_PACKAGE_MANAGER=⚠️ No package manager found in cache.
JP|MSG_ERROR_NO_PACKAGE_MANAGER=⚠️ パッケージマネージャーが見つかりません。

US|MSG_CONFIRM_INSTALL=Do you want to install {pkg}?
JP|MSG_CONFIRM_INSTALL=パッケージ {pkg} をインストールしますか？

# =======================
# system-config.sh
# =======================

# information() 関数
US|MSG_INFO_LANG_CODE=Language Code: {code}
JP|MSG_INFO_LANG_CODE=言語コード: {code}

US|MSG_INFO_ZONENAME_CODE=Zonename Code: {code}
JP|MSG_INFO_ZONENAME_CODE=ゾーンネームコード: {code}

US|MSG_INFO_TIMEZONE_CODE=Timezone Code: {code}
JP|MSG_INFO_TIMEZONE_CODE=タイムゾーンコード: {code}

# set_device_name_password() 関数
US|MSG_ENTER_DEVICE_NAME=Enter the new device name:
JP|MSG_ENTER_DEVICE_NAME=新しいデバイス名を入力してください:

US|MSG_ERROR_EMPTY_INPUT=Input cannot be empty.
JP|MSG_ERROR_EMPTY_INPUT=入力が空です。

US|MSG_ENTER_NEW_PASSWORD=Enter the new password:
JP|MSG_ENTER_NEW_PASSWORD=新しいパスワードを入力してください:

US|MSG_ERROR_PASSWORD_LENGTH=Password must be at least 8 characters long.
JP|MSG_ERROR_PASSWORD_LENGTH=パスワードは8文字以上である必要があります。

US|MSG_CONFIRM_SETTINGS_PREVIEW=Please confirm the following settings:
JP|MSG_CONFIRM_SETTINGS_PREVIEW=以下の設定内容を確認してください：

US|MSG_PREVIEW_DEVICE_NAME=Device Name: {name}
JP|MSG_PREVIEW_DEVICE_NAME=デバイス名: {name}

US|MSG_PREVIEW_PASSWORD=Password: {password}
JP|MSG_PREVIEW_PASSWORD=パスワード: {password}

US|MSG_CONFIRM_DEVICE_SETTINGS=Are you sure with the following settings? (y/n):
JP|MSG_CONFIRM_DEVICE_SETTINGS=以下の内容でよろしいですか？(y/n):

US|MSG_UPDATE_CANCELLED=Operation has been canceled.
JP|MSG_UPDATE_CANCELLED=設定がキャンセルされました。

US|MSG_UPDATE_FAILED_PASSWORD=Failed to update password.
JP|MSG_UPDATE_FAILED_PASSWORD=パスワードの更新に失敗しました。

US|MSG_UPDATE_FAILED_DEVICE=Failed to update device name.
JP|MSG_UPDATE_FAILED_DEVICE=デバイス名の更新に失敗しました。

US|MSG_UPDATE_FAILED_COMMIT=Failed to commit changes.
JP|MSG_UPDATE_FAILED_COMMIT=変更の保存に失敗しました。

US|MSG_UPDATE_SUCCESS=✅ Password and device name have been successfully updated.
JP|MSG_UPDATE_SUCCESS=✅ パスワードとデバイス名が正常に更新されました。

# set_wifi_ssid_password() 関数
US|MSG_ERROR_NO_COUNTRY_CODE=Error: Country code not found.
JP|MSG_ERROR_NO_COUNTRY_CODE=エラー：国コードが見つかりません。

US|MSG_NO_WIFI_DEVICES=No Wi-Fi devices found. Exiting.
JP|MSG_NO_WIFI_DEVICES=Wi-Fiデバイスが見つかりません。終了します。

US|MSG_COMMIT_FAILED_WIFI=Failed to commit wireless settings.
JP|MSG_COMMIT_FAILED_WIFI=無線設定の保存に失敗しました。

US|MSG_WIFI_SETTINGS_UPDATED=Device {device} settings have been updated.
JP|MSG_WIFI_SETTINGS_UPDATED=デバイス {device} の設定が更新されました。

# configure_wifi_device() 関数
US|MSG_WIFI_DEVICE_BAND=Device {device} (Band: {band})
JP|MSG_WIFI_DEVICE_BAND=デバイス {device} (帯域: {band})

US|MSG_ENABLE_BAND=Enable band {band} on device {device}? (y/n):
JP|MSG_ENABLE_BAND=デバイス {device} のバンド {band} を有効にしますか？(y/n):

US|MSG_ENTER_SSID=Enter SSID:
JP|MSG_ENTER_SSID=SSIDを入力してください:

US|MSG_ERROR_EMPTY_SSID=SSID cannot be empty.
JP|MSG_ERROR_EMPTY_SSID=SSIDが空です。

US|MSG_ENTER_WIFI_PASSWORD=Enter password (8 or more characters):
JP|MSG_ENTER_WIFI_PASSWORD=パスワードを入力してください (8文字以上):

US|MSG_PASSWORD_TOO_SHORT=Password is too short. Please enter at least 8 characters.
JP|MSG_PASSWORD_TOO_SHORT=パスワードが短すぎます。8文字以上入力してください。

US|MSG_WIFI_CONFIG_PREVIEW=WiFi Configuration Preview:
JP|MSG_WIFI_CONFIG_PREVIEW=WiFi設定の確認:

US|MSG_WIFI_BAND_INFO=Band Type: {band}
JP|MSG_WIFI_BAND_INFO=周波数帯: {band}

US|MSG_WIFI_HTMODE_INFO=Channel Width Mode: {mode}
JP|MSG_WIFI_HTMODE_INFO=チャンネル帯域モード: {mode}

US|MSG_CONFIRM_WIFI_SETTINGS=Configuration: SSID = {ssid}, Password = {password}. Is this correct? (y/n):
JP|MSG_CONFIRM_WIFI_SETTINGS=設定内容: SSID = {ssid}, パスワード = {password}。これで良いですか？(y/n):

US|MSG_REENTER_INFO=Please re-enter the information.
JP|MSG_REENTER_INFO=もう一度入力してください。

US|MSG_INVALID_YN=Invalid input. Please enter 'y' or 'n'.
JP|MSG_INVALID_YN=無効な入力です。y または n を入力してください。

# set_device() 関数
US|MSG_PRESS_KEY_REBOOT=Press any key to reboot the device
JP|MSG_PRESS_KEY_REBOOT=任意のキーを押してデバイスを再起動します

# configure_system() 関数
US|MSG_APPLYING_ZONENAME=Applying zonename settings: {zone}
JP|MSG_APPLYING_ZONENAME=ゾーン名設定を適用中: {zone}

US|MSG_APPLYING_TIMEZONE=Applying timezone settings: {timezone}
JP|MSG_APPLYING_TIMEZONE=タイムゾーン設定を適用中: {timezone}

# =======================
# common-feed-package.sh
# =======================

# feed_package() 関数
# この関数では直接メッセージキーを使用していません
# デバッグログとハードコードされたメッセージのみを使用
# 主に以下のような直接メッセージが使用されています：
# - "APIからデータを取得できませんでした。"
# - "$PKG_PREFIX が見つかりません。"
# - "パッケージ情報の取得に失敗しました。"

# 最終的に install_package() 関数を呼び出しており、その関数内でメッセージキーが使用されています
# が、それらは common-package.sh に属するものです

# feed_package_release() 関数
# こちらも feed_package() 関数と同様に、
# 直接メッセージキーを使用せず、同じハードコードされたメッセージを使用しています
# 最終的に install_package() を呼び出しています

# 注：このファイル内では messages.db からのキーを直接参照していません
# 代わりに debug_log() 関数を使ったデバッグメッセージと、
# ハードコードされた日本語メッセージを使用しています

# =======================
# dynamic-system-info.sh
# =======================

# このファイルでは、messages.dbからのメッセージキーを直接参照していません。
# システム情報の取得・設定に特化した関数のみで構成されています。

# 各関数について：
# get_device_architecture() - デバイスのアーキテクチャ情報を取得
# get_os_info() - OS情報を取得
# get_package_manager() - パッケージ管理システムを判別
# get_available_language_packages() - 利用可能な言語パッケージの一覧を取得
# get_timezone_info() - タイムゾーン情報を取得
# get_zonename_info() - ゾーン名を取得
# get_available_timezones() - 使用可能なタイムゾーンの一覧を取得
# set_system_timezone() - システムのタイムゾーンを設定
# set_system_language() - システムの言語を設定
# get_country_info() - システムの国情報を取得
# generate_system_report() - システムレポートを生成
# init_device_cache() - デバイス情報をキャッシュに初期化
# detect_and_save_package_manager() - パッケージマネージャを検出して保存
# debug_info() - デバッグ情報を表示

# 注：このスクリプトには直接メッセージキーの参照はなく、
# 他のスクリプト（例：common-country.sh）から呼び出されて使用されます
